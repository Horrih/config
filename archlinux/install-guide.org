* Refind
** Installation
Start by installing the refind package, then run refind install.

However, be careful : your kernel options are not properly generated when booting from the
live USB, you'll need  to edit them yourself, see next sections

** Auto detection
Here is an example of working config

#+begin_src bash
cat /boot/refind_linux.conf
"Boot with standard options"  "root=UUID=e95ec57e-0410-422c-9705-3ca5cbe992a0 rw rootflags=subvol=@"

#+end_src

The UUID can be found with the following command

#+begin_src bash
  blkid /dev/nvme0n1p3
#+end_src

That's enough, your kernel will be auto detected !

** Manual stanza

Here is an example :

#+begin_src bash
dont_scan_volumes "9671200c-f6e7-4b6d-bec6-4356100d547d"

menuentry "Arch Linux" {
    icon     /EFI/refind/themes/refind-ambience/icons/os_arch.png
    volume   "9671200c-f6e7-4b6d-bec6-4356100d547d"
    loader   /@/boot/vmlinuz-linux-zen
    initrd   /@/boot/initramfs-linux-zen.img
    options  "root=UUID=e95ec57e-0410-422c-9705-3ca5cbe992a0 rw rootflags=subvol=@"
    submenuentry "Fallback initramfs" {
        initrd /@/boot/initramfs-linux-zen-fallback.img
    }
}


#+end_src

* Secure boot

I recommend the [[https://itsfoss.community/t/setting-up-secure-boot-in-arch-based-distributions/11490][following tutorial]]

Basically :
** Install shim-signed from the AUR

  #+begin_src bash
    sudo pacman -S sbsigntools efitools refind
    paru shim-signed
  #+end_src
** Install refind + shim to your EFI partition

  #+begin_src bash
sudo refind-install --shim /usr/share/shim-signed/shimx64.efi

  #+end_src

This will also generate private key + certificate in .crt and .cer forms and copy the public
part to the /efi/EFI/refind/keys directory

** Signed your bootloaders + kernels
Use these keys to sign refind + your kernel. By default shim looks for grubx64 so you have to sign
this one which should be a copy of refind.

#+begin_src bash
  sudo sbsign --key /etc/refind.d/keys/refind_local.key --cert /etc/refind.d/keys/refind_local.crt --output /efi/EFI/refind/grubx64.efi  /efi/EFI/refind/grubx64.efi
  sudo sbsign --key /etc/refind.d/keys/refind_local.key --cert /etc/refind.d/keys/refind_local.crt --output /boot/vmlinuz-linux-zen  /boot/vmlinuz-linux-zen
  #+end_src

** Test that everything works
Go back to your UEFI to turn on secureboot.
Not sure if required but I told my UEFI to trust /EFI/refind/shimx64
On first boot it will raise a security error : enroll the EFI/refind/keys/refind_local.cer

** Automate it with a mkinitcpio script
Check out the [[https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface/Secure_Boot#shim_with_key][arch wiki]]

TL;DR :
#+begin_src bash
#!/usr/bin/env bash

kernel="$1"
[[ -n "$kernel" ]] || exit 0

# use already installed kernel if it exists
[[ ! -f "$KERNELDESTINATION" ]] || kernel="$KERNELDESTINATION"

keypairs=(/etc/refind.d/keys/refind_local.key /etc/refind.d/keys/refind_local.crt)

for (( i=0; i<${#keypairs[@]}; i+=2 )); do
    key="${keypairs[$i]}" cert="${keypairs[(( i + 1 ))]}"
    if ! sbverify --cert "$cert" "$kernel" &>/dev/null; then
        sbsign --key "$key" --cert "$cert" --output "$kernel" "$kernel"
    fi
done

#+end_src
